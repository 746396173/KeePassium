/* Type of keyboard to show for App Lock passcode: letters and digits. */
"[AppLock/Passcode/KeyboardType/title] Alphanumeric" = "Alphanumeric";

/* Type of keyboard to show for App Lock passcode: digits only (PIN code). */
"[AppLock/Passcode/KeyboardType/title] Numeric" = "Numeric";

/* Progress status */
"[Cipher/Progress] Decrypting" = "Decrypting";

/* Progress status */
"[Cipher/Progress] Encrypting" = "Encrypting";

/* Error message about AES cipher. [errorCode: Int] */
"[CryptoError] AES decryption error (code %d)" = "AES decryption error (code %d)";

/* Error message about AES cipher. [errorCode: Int] */
"[CryptoError] AES encryption error (code %d)" = "AES encryption error (code %d)";

/* Error message about AES cipher. [errorCode: Int] */
"[CryptoError] AES initialization error (code %d)" = "AES initialization error (code %d)";

/* Error message about Argon2 hashing function. [errorCode: Int] */
"[CryptoError] Argon2 hashing error (code %d)" = "Argon2 hashing error (code %d)";

/* Error message about PKCS7 padding. [errorCode: Int] */
"[CryptoError] Invalid data padding (code %d). File corrupt?" = "Invalid data padding (code %d). File corrupt?";

/* Error message about key derivation function (KDF) parameters. [kdfName: String, paramName: String] */
"[CryptoError] Invalid KDF parameter: %@ - %@. File corrupt?" = "Invalid KDF parameter: %1$@ - %2$@. File corrupt?";

/* Error message about random number generator. [errorCode: Int] */
"[CryptoError] Random number generator error (code %d)" = "Random number generator error (code %d)";

/* Error message about Twofish cipher. [errorCode: Int] */
"[CryptoError] Twofish cipher error (code %d)" = "Twofish cipher error (code %d)";

/* Error message */
"[Database/Load/Error] Cannot find database file" = "Cannot find database file";

/* Error message */
"[Database/Load/Error] Cannot find key file" = "Cannot find key file";

/* Error message */
"[Database/Load/Error] Cannot open database file" = "Cannot open database file";

/* Error message */
"[Database/Load/Error] Cannot open key file" = "Cannot open key file";

/* Error shown when both master password and key file are empty */
"[Database/Load/Error] Please provide at least a password or a key file" = "Please provide at least a password or a key file";

/* Error message */
"[Database/Load/Error] Unrecognized database format" = "Unrecognized database format";

/* Progress status: finished loading database */
"[Database/Progress] Done" = "Done";

/* Progress bar status */
"[Database/Progress] Loading database file..." = "Loading database file...";

/* Progress status */
"[Database/Progress] Loading key file..." = "Loading key file...";

/* Error message */
"[Database/Unlock/Error] Failed to open key file" = "Failed to open key file";

/* Error message */
"[Database/Unlock/Error] Password and key file are both empty." = "Password and key file are both empty.";

/* Error message */
"[Database1/FormatError] Database file is corrupted." = "Database file is corrupted.";

/* Error message [fieldName: String] */
"[Database1/FormatError] Error parsing field %@. Corrupted database file?" = "Error parsing field %@. Corrupted database file?";

/* Error message */
"[Database1/FormatError] Found an entry outside any group. Corrupted DB file?" = "Found an entry outside any group. Corrupted DB file?";

/* Error message */
"[Database1/FormatError] Unexpected end of file. Corrupted database file?" = "Unexpected end of file. Corrupted database file?";

/* Error message when reading database header */
"[Database1/Header1/Error] Header reading error. DB file corrupt?" = "Header reading error. DB file corrupt?";

/* Error message. [flagsHexString: String] */
"[Database1/Header1/Error] Unsupported cipher. (Code: %@)" = "Unsupported cipher. (Code: %@)";

/* Error message when opening a database. [version: String] */
"[Database1/Header1/Error] Unsupported database format version: %@." = "Unsupported database format version: %@.";

/* Error message when opening a database */
"[Database1/Header1/Error] Wrong file signature. Not a KeePass database?" = "Wrong file signature. Not a KeePass database?";

/* Status message: collecting database items into a single package */
"[Database1/Progress] Packing the content" = "Packing the content";

/* Status message: processing the content of a database */
"[Database1/Progress] Parsing content" = "Parsing content";

/* Name of a group which contains deleted entries */
"[Database2/backupGroupName] Recycle Bin" = "Recycle Bin";

/* Error message. Parsing refers to the analysis/understanding of file content. [reason: String] */
"[Database2/FormatError] Cannot parse database. %s" = "Cannot parse database. %s";

/* Error message [blockIndex: Int] */
"[Database2/FormatError] Corrupted database file (block %d has negative size)" = "Corrupted database file (block %d has negative size)";

/* Error message: hash(checksum) of a data block is wrong. [blockIndex: Int] */
"[Database2/FormatError] Corrupted database file (hash mismatch in block %d)" = "Corrupted database file (hash mismatch in block %d)";

/* Error message: HMAC value (kind of checksum) of a data block is wrong. [blockIndex: Int] */
"[Database2/FormatError] Corrupted database file (HMAC mismatch in block %d)" = "Corrupted database file (HMAC mismatch in block %d)";

/* Error message about Gzip compression algorithm. [reason: String] */
"[Database2/FormatError] Gzip error: %@" = "Gzip error: %@";

/* Error message: wrong ID of a data block */
"[Database2/FormatError] Unexpected block ID." = "Unexpected block ID.";

/* Error message */
"[Database2/FormatError] Unexpected end of file. Corrupted file?" = "Unexpected end of file. Corrupted file?";

/* Error message when saving a database. [reason: String] */
"[Database2/Header2/Error] Failed to uncompress attachment data: %@" = "Failed to uncompress attachment data: %@";

/* Error message, with the name of problematic field. [fieldName: String] */
"[Database2/Header2/Error] Header field %@ is corrupted." = "Header field %@ is corrupted.";

/* Error message */
"[Database2/Header2/Error] Header hash mismatch. DB file corrupt?" = "Header hash mismatch. DB file corrupt?";

/* Error message. HMAC = https://en.wikipedia.org/wiki/HMAC */
"[Database2/Header2/Error] Header HMAC mismatch. DB file corrupt?" = "Header HMAC mismatch. DB file corrupt?";

/* Error message when reading database header */
"[Database2/Header2/Error] Header reading error. DB file corrupt?" = "Header reading error. DB file corrupt?";

/* Error message when opening a database */
"[Database2/Header2/Error] Unknown compression algorithm." = "Unknown compression algorithm.";

/* Error message. [uuidHexString: String] */
"[Database2/Header2/Error] Unsupported data cipher: %@" = "Unsupported data cipher: %@";

/* Error message when opening a database. [version: String] */
"[Database2/Header2/Error] Unsupported database format version: %@." = "Unsupported database format version: %@.";

/* Error message when opening a database. [id: UInt32] */
"[Database2/Header2/Error] Unsupported inner stream cipher (ID %d)" = "Unsupported inner stream cipher (ID %d)";

/* Error message about Key Derivation Function. [uuidString: String] */
"[Database2/Header2/Error] Unsupported KDF: %@" = "Unsupported KDF: %@";

/* Error message when opening a database */
"[Database2/Header2/Error] Wrong file signature. Not a KeePass database?" = "Wrong file signature. Not a KeePass database?";

/* Error message about Gzip compression algorithm. [errorMessage: String] */
"[Database2/Loading/Error] Error unpacking database: %@" = "Error unpacking database: %@";

/* A warning about missing attachments after loading the database. [lastUsedAppName: String, attachmentNames: String] */
"[Database2/Loading/Warning/missingBinaries]" = "Attachments of some entries are missing data. This is a sign of database corruption, most likely by the last used app (%1$@). KeePassium will preserve the empty attachments, but cannot restore them. You should restore your database from a backup copy. \n\nMissing attachments: %2$@";

/* A warning about nameless attachments, shown after loading the database. [listOfEntryNames: String] */
"[Database2/Loading/Warning/namelessAttachments]" = "Some entries have attachments without a name. This is a sign of previous database corruption.\n\n Please review attached files in the following entries (and their history):\n%@";

/* A warning about misformatted custom fields after loading the database. [entryPaths: String] */
"[Database2/Loading/Warning/namelessCustomFields]" = "Some entries have custom field(s) with empty names. This can be a sign of data corruption. Please check these entries:\n\n%@";

/* A warning about unused attachments after loading the database. [lastUsedAppName: String] */
"[Database2/Loading/Warning/unusedAttachments]" = "The database contains some attachments that are not used in any entry. Most likely, they have been forgotten by the last used app (%@). However, this can also be a sign of data corruption. \nPlease make sure to have a backup of your database before changing anything.";

/* Progress bar status */
"[Database2/Progress] Loading database" = "Loading database";

/* Progress bar status */
"[Database2/Progress] Reading database content" = "Reading database content";

/* Progress bar status */
"[Database2/Progress] Writing encrypted blocks" = "Writing encrypted blocks";

/* Error message while saving a database. [errorDescription: String] */
"[Database2/Saving/Error] Data compression error: %@" = "Data compression error: %@";

/* Error message while saving a database. [errorDescription: String] */
"[Database2/Saving/Error] Encryption error: %@" = "Encryption error: %@";

/* Error message about XML parsing. [value: String, tag: String] */
"[Database2/Xml2/ParsingError] Malformed value '%@' in %@" = "Malformed value '%1$@' in %2$@";

/* Error message about XML parsing. [tag: String] */
"[Database2/Xml2/ParsingError] Nil value in %@" = "Nil value in %@";

/* Error message about XML parsing */
"[Database2/Xml2/ParsingError] Not a KeePass XML" = "Not a KeePass XML";

/* Error message about XML parsing. [actualTag: String] */
"[Database2/Xml2/ParsingError] Unexpected tag '%@'" = "Unexpected tag '%@'";

/* Error message about XML parsing. [actualTag: String, expectedTag: String] */
"[Database2/Xml2/ParsingError] Unexpected tag '%@' (instead of '%@')" = "Unexpected tag '%1$@' (instead of '%2$@')";

/* Generic error while parsing XML. [errorDetails: String] */
"[Database2/Xml2/ParsingError] XML error: %@" = "XML error: %@";

/* Error message while opening a database */
"[DatabaseError] Cannot open database" = "Cannot open database";

/* Error message while saving a database */
"[DatabaseError] Cannot save database" = "Cannot save database";

/* Error message: user provided a wrong master key for decryption. */
"[DatabaseError] Invalid password or key file" = "Invalid password or key file";

/* A very generic error message */
"[FileDocument] Unexpected file error, please contact us." = "Unexpected file error, please contact us.";

/* Error message [reason: String] */
"[FileKeeper] Failed to delete file. Reason: %@" = "Failed to delete file. Reason: %@";

/* Error message [reason: String] */
"[FileKeeper] Failed to import file. Reason: %@" = "Failed to import file. Reason: %@";

/* Error message [reason: String] */
"[FileKeeper] Failed to open file. Reason: %@" = "Failed to open file. Reason: %@";

/* Error message: tried to import URL which does not point to a file */
"[FileKeeper] Not a file URL" = "Not a file URL";

/* A sorting option for a list of files, by file creation date. Example: 'Sort Order: Creation Date (Oldest First)' */
"[FilesSortOrder/longTitle] Creation Date (Oldest First)" = "Creation Date (Oldest First)";

/* A sorting option for a list of files, by file creation date. Example: 'Sort Order: Creation Date (Recent First)' */
"[FilesSortOrder/longTitle] Creation Date (Recent First)" = "Creation Date (Recent First)";

/* A sorting option for a list of files, by file's last modification date. Example: 'Sort Order: Modification Date (Oldest First)' */
"[FilesSortOrder/longTitle] Modification Date (Oldest First)" = "Modification Date (Oldest First)";

/* A sorting option for a list of files, by file's last modification date. Example: 'Sort Order: Modification Date (Recent First)' */
"[FilesSortOrder/longTitle] Modification Date (Recent First)" = "Modification Date (Recent First)";

/* A sorting option for a list of files, by file name. Example: 'Sort Order: Name (A..Z)' */
"[FilesSortOrder/longTitle] Name (A..Z)" = "Name (A..Z)";

/* A sorting option for a list of files, by file name. Example: 'Sort Order: Name (Z..A)' */
"[FilesSortOrder/longTitle] Name (Z..A)" = "Name (Z..A)";

/* A sorting option for a list of files. Example: 'Sort Order: No Sorting' */
"[FilesSortOrder/longTitle] No Sorting" = "No Sorting";

/* An option in Group Viewer settings. Example: 'Sort Order: By Creation Date (New..Old)' */
"[GroupSortOrder/longTitle] By Creation Date (New..Old)" = "By Creation Date (New..Old)";

/* An option in Group Viewer settings. Example: 'Sort Order: By Creation Date (Old..New)' */
"[GroupSortOrder/longTitle] By Creation Date (Old..New)" = "By Creation Date (Old..New)";

/* An option in Group Viewer settings. Example: 'Sort Order: By Modification Date (New..Old)' */
"[GroupSortOrder/longTitle] By Modification Date (New..Old)" = "By Modification Date (New..Old)";

/* An option in Group Viewer settings. Example: 'Sort Order: By Modification Date (Old..New)' */
"[GroupSortOrder/longTitle] By Modification Date (Old..New)" = "By Modification Date (Old..New)";

/* An option in Group Viewer settings. Example: 'Sort Order: By Title (A..Z)' */
"[GroupSortOrder/longTitle] By Title (A..Z)" = "By Title (A..Z)";

/* An option in Group Viewer settings. Example: 'Sort Order: By Title (Z..A)' */
"[GroupSortOrder/longTitle] By Title (Z..A)" = "By Title (Z..A)";

/* An option in Group Viewer settings. Example: 'Sort Order: No Sorting' */
"[GroupSortOrder/longTitle] No Sorting" = "No Sorting";

/* Status message: processing of the master key is in progress */
"[KDF/Progress] Processing the master key" = "Processing the master key";

/* Generic error message about system keychain. [errorCode: Int] */
"[KeychainError/generic] Keychain error (code %d) " = "Keychain error (code %d) ";

/* Error message about system keychain. */
"[KeychainError/unexpectedFormat] Keychain error: unexpected data format" = "Keychain error: unexpected data format";

/* Explanation/notification when a long-running operation was cancelled by user */
"[Progress/CancellationReason] Cancelled by user" = "Cancelled by user";

/* Error message when a long-running operation was cancelled due to the lack of free memory (RAM). */
"[Progress/CancellationReason/lowMemory]" = "Not enough memory to continue.\nThis can happen with larger databases or too ambitious database settings (Argon2 memory parameter).";

/* A description/subtitle for Settings/AppLockTimeout options that trigger when the user has been idle for a while. For example: 'AppLock Timeout: 3 seconds (After last interaction) */
"[Settings/AppLockTimeout/description] After last interaction" = "After last interaction";

/* A description/subtitle for Settings/AppLock/Timeout options that trigger when the app is minimized. For example: 'AppLock Timeout: 3 seconds (After leaving the app) */
"[Settings/AppLockTimeout/description] After leaving the app" = "After leaving the app";

/* An option in Settings. Will be shown as 'App Lock: Timeout: Immediately' */
"[Settings/AppLockTimeout/fullTitle] Immediately" = "Immediately";

/* An option in Settings. Will be shown as 'App Lock: Timeout: Never' */
"[Settings/AppLockTimeout/fullTitle] Never" = "Never";

/* An option in Settings. Will be shown as 'App Lock: Timeout: Immediately' */
"[Settings/AppLockTimeout/shortTitle] Immediately" = "Immediately";

/* An option in Settings. Will be shown as 'App Lock: Timeout: Never' */
"[Settings/AppLockTimeout/shortTitle] Never" = "Never";

/* An option in Settings. Please keep it short. Will be shown as 'Keep Backup Files: Forever' */
"[Settings/BackupKeepingDuration/shortTitle] Forever" = "Forever";

/* An option in Settings. Will be shown as 'Clipboard Timeout: Never' */
"[Settings/ClipboardTimeout/fullTitle] Never" = "Never";

/* An option in Settings. Will be shown as 'Clipboard Timeout: Never' */
"[Settings/ClipboardTimeout/shortTitle] Never" = "Never";

/* A description/subtitle for the 'DatabaseLockTimeout: Immediately'. */
"[Settings/DatabaseLockTimeout/description] When leaving the app" = "When leaving the app";

/* An option in Settings. Will be shown as 'Database Lock: Timeout: Immediately' */
"[Settings/DatabaseLockTimeout/fullTitle] Immediately" = "Immediately";

/* An option in Settings. Will be shown as 'Database Lock: Timeout: Never' */
"[Settings/DatabaseLockTimeout/fullTitle] Never" = "Never";

/* An option in Settings. Will be shown as 'Database Lock: Timeout: Immediately' */
"[Settings/DatabaseLockTimeout/shortTitle] Immediately" = "Immediately";

/* An option in Settings. Will be shown as 'Database Lock: Timeout: Never' */
"[Settings/DatabaseLockTimeout/shortTitle] Never" = "Never";

/* An option in Group Viewer settings. Refers fo the most recent time when the entry was modified. Will be shown as 'Entry Subtitle: Last Modified Date'. */
"[Settings/EntryListDetail/longTitle] Last Modified Date" = "Last Modified Date";

/* An option in Group Viewer settings. Will be shown as 'Entry Subtitle: None', meanining that no entry details will be shown in any lists. */
"[Settings/EntryListDetail/longTitle] None" = "None";

/* An option in Group Viewer settings. Refers to comments/notes field of the entry. Will be shown as 'Entry Subtitle: Notes'. */
"[Settings/EntryListDetail/longTitle] Notes" = "Notes";

/* An option in Group Viewer settings. Will be shown as 'Entry Subtitle: Password'. */
"[Settings/EntryListDetail/longTitle] Password" = "Password";

/* An option in Group Viewer settings. Will be shown as 'Entry Subtitle: URL'. */
"[Settings/EntryListDetail/longTitle] URL" = "URL";

/* An option in Group Viewer settings. It refers to login information rather than person's name. Will be shown as 'Entry Subtitle: User Name'. */
"[Settings/EntryListDetail/longTitle] User Name" = "User Name";

/* Human-readable file location. The file is situated either online / in cloud storage, or on the same device, but in some other app. Example: 'File Location: Cloud storage / Another app' */
"[URLReference/Location] Cloud storage / Another app" = "Cloud storage / Another app";

/* Human-readable file location: the file is on device, inside the app sandbox. 'Backup' is a dedicated directory for database backup files. Example: 'File Location: Internal backup' */
"[URLReference/Location] Internal backup" = "Internal backup";

/* Human-readable file location: the file is on device, inside the app sandbox. 'Inbox' is a special directory for files that are being imported. Can be also 'Internal import'. Example: 'File Location: Internal inbox' */
"[URLReference/Location] Internal inbox" = "Internal inbox";

/* Human-readable file location: the file is on device, inside the app sandbox. Example: 'File Location: Local copy' */
"[URLReference/Location] Local copy" = "Local copy";

